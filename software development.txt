							lec 1
 
what is software development ?
-the prcess of creating apps,websites ,games and software we use in daily life it includes testing ,modifications and maintainance


from lower to higher 
1-coder
2-programmer
3-developer
4-software engineer


developer types (application,web,game,system) developer

software quality
1-user reqiurements
2-maintainability
3-dependability(saftey,security,reliability)
4-acceptability(understandable,usable)
5-efficiency



						       lec 2
software development reqiurements
1-initially, you don't know everything 
2-well coordinated team
3-good team communication
4-good customer communication
5-a proccess to follow up 
6-proccess flexability
7-a plan to follow up 
7-aware about whereabouts
9-tell in failure 
10-right tools and practices

methodology:a formalized approach that an organization goes through to analysis, design, implement and maintain a system


SDLC (1-requirement gathering and analysis, 2-design, 3-implement, 4-testing, 5-deployment , 6-maintainance)


1-requirement gathering (studying existing system,identify improvements,use cases,sample designes,sample reports)
2-design (convert requirements to(architecture design,high level design,low level design) the designs will be viewed by (software development,enterprise architecture ,opreation,customer)
3-implementation (programmers write the code, reuse the code from previous projects,unit testing should begin at this point)
4-unit testing (layers of testing(unit testing ,integration testing,system testing,user acceptence testing)
5-deployment in this step software is release the production enviroment
6-maintenance(fixes user problems,software fixes at this point)



software development types
1-code and fix 
2-plan driven approaches:approaches wehere development proccess are planed in advance and proccess is measured against this plan 
3-agile approaches :approahes where deveolpment proccess planing is incremintal and it is easier to change to reflect customer's changes
							




							lec 3 
plan driven charachterstics(focus on repeatability,detailed workflow and plans and roles and responsabilities,defined standarlized and incermential,on going risk management,focus on verfication and validation)

water fall model:a project management methodology based on seqntial design process 

waterfall pros:easy to understand it, provide structure to inexperinced staff, works on quality no matter about cost and time
waterfall cons:the customer can't preview the project ,all requirements should be known well,testing phase begin late and and must to finish early

evolutionary prototype model(1-initial concept and requirements,2-quick design,3-build prorotype,4-customer evalution,5-if not done yes go to refine design and requirements,6-if happy go to final testing,7-product release
evolutionary prototype pros:customer get earlier interaction with system,missing functionality can be easily figure out,suitable for dynamic and un clear requirements
evolutionary prototype cons:quick prototype lead to poor performance ,some people say it similat to code and fix ,difficult to plan

agile:iteritive and inceremential, modularity,adaptive planning,flexilbe to change, people oriented


						lec 4
xp values:
1-communication:enhance the communcation of team members with customers
2-simplicity:build something simple that will work today rather than something takes time
3-feedback:must be taken from customer
4-courage:put your work out there for others to review
5-respect:the success or failure of project is everyone's responsability

scrum roles:
1-product owner:is responsible for sequncing the work that should be done
2-scrum master:keep things orgainized and remove obstacles that may slow down the development team
3-development team:doesn't work

software architecture:the structure or structures of the system which comprise software elements the externally visible properties of those elements and the relationships among them

						lec 5
architecture system characterstics
1-performance
2-saftey
3-security
4-availability
5-maintainability

architectural patterns
1-model view control
2-peer to peer
3-data flow 
4-notification
5-layered

distributed system:model which shows how data and processing is distributed across a range of components

software structure :it is a high level structure or a blueprint of software defining how compnents interact and how the system achives objects


						lec 7
single respnsiplity principle:a class that is should have one reason to change
open closed principle:a class that open for extension and closed for modifaction
liskov substitution:derived classes that should be substitutable for their class
interface segregation principle:make fine grained interfaces that are client specific 
dependency inversion principle:depend on abstactions not on concerntions 


creational design patterns:that deals with initializing and configuring the classes who create it and when it has been created 
structrual design patterns:that deals with decoupling interfaces and implementing the classes and compsition of classes
behavioural design patterns:that deals with interactions among classes and objects distribute responsibility












